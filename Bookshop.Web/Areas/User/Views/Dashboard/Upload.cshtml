@using System.Web.UI.WebControls
@using Bookshop.Model
@model Bookshop.ViewModel.UploadBookViewModel

@{
    ViewBag.Title = "Upload";
    ViewBag.breadcrumb = "Upload";
    ViewBag.Edition = new List<SelectListItem>()
    {
        new SelectListItem() { Text = "1", Value = "1"},
        new SelectListItem() { Text = "2", Value = "2"},
        new SelectListItem() { Text = "3", Value = "3"},
        new SelectListItem() { Text = "4", Value = "4"},
        new SelectListItem() { Text = "5", Value = "5"},
        new SelectListItem() { Text = "6", Value = "6"},
        new SelectListItem() { Text = "7", Value = "7"},
        new SelectListItem() { Text = "8", Value = "8"},
        new SelectListItem() { Text = "9", Value = "9"},
        new SelectListItem() { Text = "10", Value = "10"},
        new SelectListItem() { Text = "11", Value = "11"},
        new SelectListItem() { Text = "12", Value = "12"},
        new SelectListItem() { Text = "13", Value = "13"}
    };
}

<script src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8/jquery-ui.min.js"></script>
<script language="javascript" type="text/javascript">
    function GetCategory(deptId) {
        var procemessage = "<option value='0'> Please wait...</option>";
        $("#ddlcity").html(procemessage).show();
        var url = "/Category/CategoryByDeptId/";

        $.ajax({
            url: url,
            data: { id: deptId },
            cache: false,
            type: "POST",
            success: function(data) {
                var markup = "";
                for (var x = 0; x < data.length; x++) {
                    markup += "<option value=" + data[x].Id + ">" + data[x].Name + "</option>";
                }
                if (data.length === 0) $("#category").attr('disabled', true);
                else $("#category").attr('disabled', false);

                $("#category").html(markup).show();
            }
        });
    }
</script>


<div class="col-md-9">

    @using (Html.BeginForm("Upload", "Dashboard", FormMethod.Post,  new {enctype= "multipart/form-data", @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", required="required" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Author, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Edition, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-5">
                @Html.DropDownListFor(model => model.Edition, new SelectList(ViewBag.Edition, "Value", "Text"), "Select Edition", new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(model => model.Edition, "", new { @class = "text-danger" })
            </div>
        </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-5">
                    @Html.DropDownList("Department", new SelectList(ViewBag.Departments, "Id", "Name"), "Select Department", new { @class = "form-control", onchange = "javascript:GetCategory(this.value)", required = "required" })
                    @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-3", required = "required" })
                <div class="col-md-5">
                    <select name="Category" id="category" class="form-control" disabled="disabled">
                        
                    </select>
                </div>
            </div>

            <div class="form-group radio-group">
                <label class="control-label col-sm-3">Condition</label>
                <div class="col-sm-5">

                    @{
                        var conditions = ViewBag.Conditions as List<Condition>;
                    }
                    @if (conditions != null)
                    {
                        foreach (var item in conditions)
                        {
                            <label class="radio-inline">
                                @Html.RadioButtonFor(m => m.Condition, item.Id, new { required = "required" })
                                @item.Name
                            </label>
                        }
                    }
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", @type="number", required = "required" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AdditionalInfo, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-5">
                    @Html.TextAreaFor(model => model.AdditionalInfo, 10, 10, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.AdditionalInfo, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-sm-3">Select Photo</label>
                <div class="col-sm-5">
                    <input type="file" class="form-control" name="file" accept="image/*" required="required">
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-3 col-sm-5">
                    <div class="form-group">
                        <div class="col-lg-6">
                            <input type="submit" value="Upload" class="btn btn-block btn-success" />
                        </div>

                    </div>
                </div>
            </div>

       }
</div>
